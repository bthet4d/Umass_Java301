/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI_Assignment4;

import ClassHiearchy_Assignment3.*;
import Exceptions_Assignment7.*;
import Validators.validateFields;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Bryan
 */
public class AddStudentWindow extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form AddStudentWindow
     */
    private DataContainer container;
    
    private ArrayList<JCheckBox> allCheckBoxes = new ArrayList();
    public AddStudentWindow() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        classGroup = new javax.swing.ButtonGroup();
        nameLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        ssnLabel = new javax.swing.JLabel();
        dobLabel = new javax.swing.JLabel();
        dogLabel = new javax.swing.JLabel();
        gpaLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        addressInput = new javax.swing.JTextField();
        ssnInput = new javax.swing.JTextField();
        gpaInput = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        dobMonth = new javax.swing.JTextField();
        dobDay = new javax.swing.JTextField();
        dobYear = new javax.swing.JTextField();
        dogMonth = new javax.swing.JTextField();
        dogDay = new javax.swing.JTextField();
        dogYear = new javax.swing.JTextField();
        classesPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nameLabel.setText("Name");

        addressLabel.setText("Address");

        ssnLabel.setText("SSN");

        dobLabel.setText("Date of Birth");

        dogLabel.setText("Date of Graduation");

        gpaLabel.setText("GPA");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel/Clear");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        dobMonth.setText("MM");

        dobDay.setText("DD");

        dobYear.setText("YY");

        dogMonth.setText("MM");

        dogDay.setText("DD");

        dogYear.setText("YY");

        javax.swing.GroupLayout classesPanelLayout = new javax.swing.GroupLayout(classesPanel);
        classesPanel.setLayout(classesPanelLayout);
        classesPanelLayout.setHorizontalGroup(
            classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );
        classesPanelLayout.setVerticalGroup(
            classesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel2.setText("Enrolled In:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton)
                        .addGap(18, 18, 18)
                        .addComponent(exitButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameLabel)
                                    .addComponent(addressLabel)
                                    .addComponent(ssnLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(addressInput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                        .addComponent(nameInput, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(ssnInput, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gpaLabel)
                                    .addComponent(dogLabel)
                                    .addComponent(dobLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dobMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dobDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dobYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dogMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dogDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dogYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(gpaInput)
                                        .addGap(84, 84, 84)))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(classesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap(242, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, exitButton, saveButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLabel)
                            .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addressLabel)
                            .addComponent(addressInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ssnLabel)
                            .addComponent(ssnInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dobLabel)
                            .addComponent(dobMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dobDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dobYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(classesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dogLabel)
                    .addComponent(dogMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dogDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dogYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gpaLabel)
                    .addComponent(gpaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(saveButton)
                    .addComponent(cancelButton)
                    .addComponent(exitButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public AddStudentWindow (final DataContainer container){
        initComponents();
        this.container = container;
        String className;
        
        
        if(container.getClassrooms().isEmpty())
        {
            JLabel noClasses;
            noClasses = new JLabel();
            JButton enrolledIn = new JButton();
            noClasses.setText("There are no courses available.");
            enrolledIn.setText("Add Class");
            enrolledIn.addActionListener(new java.awt.event.ActionListener(){

                
                public void actionPerformed(ActionEvent e) {
                   AddClassWindow addClass = new AddClassWindow(container);
                   addClass.setVisible(true);
                }
            });
            classesPanel.add(noClasses);
            classesPanel.add(enrolledIn);
            //set actionListener for enrolledIn button to open the add Student
            //window
            
            
            classesPanel.setLayout(new FlowLayout());
            
        }
        else if (!container.getClassrooms().isEmpty()){
            for(Classroom classes : container.getClassrooms())
            {
                
                className = classes.getClassName(); 
                JCheckBox classCheck = new JCheckBox();
                
                classCheck.setName(className);
                classCheck.setText(className);
                allCheckBoxes.add(classCheck);              
            
       
                classesPanel.setLayout(new FlowLayout());
                classesPanel.add(classCheck);
            
        
            }//end for-each
        }//end else-if

    }//end constructor
   

    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        String ssn = ssnInput.getText().trim().replace("-", " ").replace(" ", "");
        GregorianCalendar dob = new GregorianCalendar();
        GregorianCalendar dog = new GregorianCalendar();
               
        Student student = new Student();
        
        try{
            validateFields.validateText(nameInput.getText());
        }
        catch(NoDataException e){
            JOptionPane.showMessageDialog(null, "Please enter a name");
                return;
        }
            
        try{
            validateFields.validateText(addressInput.getText());
        }
        catch(NoDataException e)
        {
            JOptionPane.showMessageDialog(null, "Please enter an address");
            return;
        }
            
        try{
            validateFields.validateNumber(ssn);            
        }
        catch(InvalidSSN e){
            JOptionPane.showMessageDialog(null, "Please enter a valid SSN");
            return;               
        }
        
                try {

            dog = validateFields.validateDate(dogMonth.getText(),
                    dogDay.getText(), dogYear.getText());
            
        } 
        catch (InvalidDate ex) {
            JOptionPane.showMessageDialog(null, "Invalid Date");
            return;
        }
            
        try {
            
            dob = validateFields.validateDate(dobMonth.getText(),
                    dobDay.getText(), dobYear.getText());
            
            
        } 
        catch (InvalidDate ex) {
            JOptionPane.showMessageDialog(null, "Invalid Date");
            return;
        }

        //if dates and text fields are valid, call setter methods
        student.setName(nameInput.getText());
        student.setAddress(addressInput.getText());
        student.setSSN(ssn);
        student.setDateOfBirth(dob);
        student.setDateOfGraduation(dog);   
        student.setCurrentGpa(Float.parseFloat(gpaInput.getText()));
        
        ArrayList<StudentClass> studentClasses = new ArrayList<>();
        
        //if there are classes available, add the chosen ones to the students
        //list of classes
        if(!container.getClassrooms().isEmpty())
        {   
            for(JCheckBox c: allCheckBoxes){
                StudentClass enrolledIn = new StudentClass();
                FacultyClass taught = new FacultyClass();
                ArrayList<FacultyClass> classesTaught;
                String classTaught;
                if(c.isSelected()){
                    enrolledIn.setClassName(c.getName());
                    studentClasses.add(enrolledIn);
                    for(Faculty faculty: container.getTeachers())
                    {
                        classTaught = c.getName();
                        classesTaught = faculty.getClasses();
                        for(FacultyClass course: classesTaught)
                        {
                            if(classTaught.equals(course.getClassName())){
                                course.addStudent(student);
                            }
                            
                                
                        }//end FacultyClass for-each
                    }//end faculty for-each
                
                    }//end if c.isselected
                    
                }//end check box for-each
      
       
            student.setStudentClasses(studentClasses);
        }//end outer if
            container.getStudents().add(student);
            //Add student to Facutly class list
            
       
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        nameInput.setText("");
        addressInput.setText("");
        ssnInput.setText("");
        dobMonth.setText("MM");
        dobDay.setText("DD");
        dobYear.setText("YY");
        dogMonth.setText("MM");
        dogDay.setText("DD");
        dogYear.setText("YY");
        gpaInput.setText("");
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        
        dispose();
    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStudentWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStudentWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStudentWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStudentWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStudentWindow().setVisible(true);
            }
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressInput;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.ButtonGroup classGroup;
    private javax.swing.JPanel classesPanel;
    private javax.swing.JTextField dobDay;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JTextField dobMonth;
    private javax.swing.JTextField dobYear;
    private javax.swing.JTextField dogDay;
    private javax.swing.JLabel dogLabel;
    private javax.swing.JTextField dogMonth;
    private javax.swing.JTextField dogYear;
    private javax.swing.JButton exitButton;
    private javax.swing.JTextField gpaInput;
    private javax.swing.JLabel gpaLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField ssnInput;
    private javax.swing.JLabel ssnLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent ae) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
